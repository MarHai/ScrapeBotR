% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/aws.R
\name{aws_launch_instance}
\alias{aws_launch_instance}
\title{Launch a new ScrapeBot instance as AWS EC2 instance}
\usage{
aws_launch_instance(
  aws_connection,
  instance_owner,
  scrapebot_credential_section = aws_connection$rds_credential_section,
  ec2_type = "t2.micro",
  ec2_image = "ami-0767046d1677be5a0",
  ec2_image_username = "ubuntu",
 
    browser_useragent = "Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:85.0) Gecko/20100101 Firefox/85.0",
  browser_language = "de-de",
  browser_width = 1920,
  browser_height = 1080
)
}
\arguments{
\item{aws_connection}{AWS connection object, as retrieved from \code{\link[=connect_aws]{connect_aws()}}. This also specifies the region.}

\item{instance_owner}{The email address of the ScrapeBot user who will be the owner of the new instance as character string. If this one does not exist, it will be created (in this case, a text will be raised).}

\item{scrapebot_credential_section}{The section within your INI file holding the credentials to the ScrapeBot central database as character string. Default is to use the one set by \code{\link[=aws_launch_database]{aws_launch_database()}} into the aws_connection object.}

\item{ec2_type}{AWS instance type. The default, \code{t2.micro}, qualifies for the free tier. Variuos \code{t3} types have also proven useful but are connected with costs.}

\item{ec2_image}{AWS Amazon Machine Image (AMI) to use. Default is an Ubuntu Server 20.04 LTS (HVM) with SSD volume and 64bit (x86) system. This has proven to work well with both AWS and ScrapeBot. It is also eligible for the free tier.}

\item{ec2_image_username}{The username to log into the respective \code{ec2_image}. for Ubuntu images on AWS, this is \code{ubuntu}.}

\item{browser_useragent}{The emulated browser's user agent to send to requested websites. Default is a recent Firefox Desktop used under Ubuntu Linux. Will be deployed into ScrapeBot config file.}

\item{browser_language}{Language to which emulated browser is set. Default is German German. Will be deployed into ScrapeBot config file.}

\item{browser_width}{Width of the emulated browser in pixels. Default is a recent desktop monitor size. Will be deployed into ScrapeBot config file.}

\item{browser_height}{Height of the emulated browser in pixels. Default is a recent desktop monitor size. Will be deployed into ScrapeBot config file.}
}
\value{
The updated AWS connection object which get an ec2_instance attached in the respective tibble (keep/store this to later terminate the instance also).
}
\description{
Note that this could cause costs, depending on your free tier and the chosen ec2_type.
Also, note that as this function waits for a new instance to launch and reboot, it might take a couple of seconds.
}
\details{
This function follows the suggested ScrapeBot behavior in doing six things:
\enumerate{
\item Launch (i.e., create and run) one new EC2 instance in the region specified in \code{\link[=connect_aws]{connect_aws()}}
\itemize{
\item this also means to create a new security group that allows SSH traffic from anywhere
\item afterwards, an SSH connection is established with the new instance
}
\item Update the available package-manager repositories and install requirements (python3, firefox, xvfb, git)
\item Get (i.e., clone) the latest version of ScrapeBot
\item Provide Firefox's Geckodriver with execution rights
\item Install Python requirements
\item Setup the newly created ScrapeBot instance
\itemize{
\item register the EC2 instance as ScrapeBot instance in the central database
\item set up the ScrapeBot instance with the specified database and S3 settings
\item set up a cronjob to run the ScrapeBot every 2 minutes
}
}

As this function is aimed at minimizing efforts in setting up a ScrapeBot instance, not all details as available within AWS can be modified here. Specify, however:
\itemize{
\item The type of server machine you want to run. \code{t2.micro}, the default, qualifies for AWS' cost-free option. Requirements vary with what you intend to do with your ScrapeBot instance.
\item The Amazon Machine Image (AMI) or operating system you want to run. The default refers to an Ubuntu Server 20.04 LTS but AWS changes these IDs from time to time.
\item The user agent string, an identifying header sent with a web request to help the website identify what system it is interacting with
\item The browser language which nudges various websites to change their layout/language
\item The browser width and height, which helps to emulate also mobile devices (together with the user agent string)
\item The email address of the ScrapeBot user (for the web frontend) to be associated with the new instance
}

This function then automatically chooses the following settings:
\itemize{
\item A security group is either created or re-used, allowing incoming SSH traffic (TCP via port 22) from anywhere.
\item firefox is chosen as the package/browser of choice, emulated through xvfb (as suggested by ScrapeBot).
}
}
\examples{
\dontrun{

aws_connection <- connect_aws()
scrapebot_connection <- connect('my_db on localhost')
#t3.large:
#- not cost-free
#- 2 virtual CPUs
#- 8GiB RAM
#- up to 5GBit of down-/uplink speed
aws_launch_instance(aws_connection, scrapebot_connection, 'mario@haim.it', ec_type = 't3.large')
}

}
\seealso{
\code{\link[=connect_aws]{connect_aws()}}, \code{\link[=get_or_create_user]{get_or_create_user()}}, \code{\link[=aws_terminate_instance]{aws_terminate_instance()}}
}
