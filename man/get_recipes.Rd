% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/get_recipes.R
\name{get_recipes}
\alias{get_recipes}
\title{Get a tibble of available recipes}
\usage{
get_recipes(connection, instance_uid = NULL, include_inactive = FALSE)
}
\arguments{
\item{connection}{A connection object, as retrieved from \code{\link[=connect_scrapebot]{connect_scrapebot()}}.}

\item{instance_uid}{Numeric UID or a vector of numeric UIDs of the instance to filter recipes for. Filtering is inclusive (i.e., recipes are included if they are assigned to at least one of the instances; no need to be assigned to all of them to be returned). If NULL, all recipes are provided. Defaults to \code{NULL}.}

\item{include_inactive}{If \code{TRUE}, inactive recipes are included along active recipes; defaults to \code{FALSE}.}
}
\value{
A \link[tibble:tibble-package]{tibble} listing all available recipes including its UID, name, the date then the recipe was first created, its description, whether the recipe is active, as well as the number of its runs and the date of the latest run.
}
\description{
Default behavior is to just retrieve all active recipes, no matter on which instance they are running.
You may change this behavior in two ways (or combinations thereof):
\itemize{
\item If \code{instance_uid} is set, only recipes assigned to at least one of these instances are returned.
\item If \code{include_inactive} is set to \code{TRUE}, also recipes currently not active are returned.
}
}
\examples{
\dontrun{

connection <- connect('my_db on localhost')
get_recipes(connection)
get_recipes(connection, include_inactive = TRUE)
disconnect(connection)
}

}
\seealso{
\code{\link[=get_recipe_steps]{get_recipe_steps()}}
}
