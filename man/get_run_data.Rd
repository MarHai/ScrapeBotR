% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/get_run_data.R
\name{get_run_data}
\alias{get_run_data}
\title{Collect (large amounts of) data for a given combination of criteria}
\usage{
get_run_data(
  connection,
  run_uid = NULL,
  instance_uid = NULL,
  recipe_uid = NULL,
  step_uid = NULL
)
}
\arguments{
\item{connection}{A connection object, as retrieved from \code{\link[=connect]{connect()}}.}

\item{run_uid}{Optional numeric UID or a vector of numeric UIDs of a specific run to collect data from. If \code{NULL}, either \code{instance_uid} or \code{recipe_uid} (or both) has to be provided. Defaults to \code{NULL}.}

\item{instance_uid}{Optional numeric UID or a vector of numeric UIDs of the instance to filter data for. If \code{NULL}, either \code{run_uid} or \code{recipe_uid} (or both) has to be provided. Defaults to \code{NULL}.}

\item{recipe_uid}{Optional numeric UID or a vector of numeric UIDs of the recipe to filter data for. If \code{NULL}, either \code{instance_uid} or \code{run_uid} (or both) has to be provided. Defaults to \code{NULL}.}

\item{step_uid}{Optional numeric UID or a vector of numeric UIDs of a step to filter data for. Defaults to \code{NULL}.}
}
\value{
A \link[tibble:tibble-package]{tibble} listing all data including their creation timestamp, the UIDs of its run, instance, recipe, and step, as well as the data value itself.
}
\description{
Data is stored heavily within ScrapeBot. Hence, filtering needs to be applied to collect data. Two types of filter are possible:
\itemize{
\item Filter on the runs for which to collect data: Specify one or many of \code{run_uid}, \code{instance_uid}, and \code{recipe_uid.} At least one is required.
\item Filter on the step for which to collect data: Optionally specify a \code{step_uid}.
In general, this function only returns data from "success"-ful runs (see \code{\link[=get_runs]{get_runs()}}). It then collects runs matching the first set of criteria (i.e., \code{run_uid}, \code{instance_uid}, and \code{recipe_uid}). Ultimately, it collects data, thereby focusing on a specific step if specified.
}
}
\examples{
\dontrun{

connection <- connect('localhost', 'root', 's3cr3t_password')
get_run_data(connection, instance_uid = 42)
get_run_data(connection, run_uid = 256)
get_run_data(connection, recipe_uid = 21)
get_run_data(connection, run_uid = c(256, 1024))
get_run_data(connection, recipe_uid = 21:23)
get_run_data(connection, instance_uid = 42, recipe_uid = 21)
get_run_data(connection, instance_uid = 42, recipe_uid = 21, step_uid = 8)
disconnect(connection)
}

}
\seealso{
\code{\link[=get_runs]{get_runs()}}, \code{\link[=get_run_log]{get_run_log()}}
}
